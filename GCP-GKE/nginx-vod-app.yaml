---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: nginx-vod-app
spec:
  selector:
    matchLabels:
      app: nginx-vod-app # has to match .spec.template.metadata.labels
  serviceName: "nginx-vod-app-svc"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx-vod-app # has to match .spec.selector.matchLabels
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx-vod-app
        image: docker.io/mrdojojo/nginx-vod-app:1.1-arm64
        #image: docker.io/mrdojojo/nginx-vod-app:1.1-x86-64
        ports:
        - containerPort: 8080
          name: nginx-vod-app
        volumeMounts:
        - name: nginx-vod-app-pvc   #storage
          mountPath: "/opt/static/"
  volumeClaimTemplates:
  - metadata:
      name: nginx-vod-app-pvc
      labels:
        app: nginx-vod-app
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName: "pd-standard"
      resources:
        requests:
          storage: 100Gi
---
kind: Service
apiVersion: v1
metadata:
  name: nginx-vod-app-svc
  labels:
    app: nginx-vod-app
spec:
  type: NodePort
  selector:
    app: nginx-vod-app
  ports:
  - port: 8080
    targetPort: 8080  

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: nginx-vod-app-ingress
spec:
  defaultBackend:
    service:
      name: nginx-vod-app-svc
      port:
        number: 8080
  rules:
  - http:
      paths:
      - path: "/"
        pathType: ImplementationSpecific
        backend:
          service:
            name: nginx-vod-app-svc
            port:
              number: 8080
